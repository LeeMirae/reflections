Reflections

By comparing two versions I could see what changes were made to the file and that helped me identify the bug quickly. If I had only had one single version, I would not be able to see all the changes.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

I can trace changes throughout time and see how they impacted that file in a positive or negative way.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?

Pros: only signlificant logical changes are saved, saves memory, easier to trace changes

Cons: if one is forgetful, they might oversee an important change.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Git treats documents as interrelated (needed for coding), Google Docs was not designed for that? 

How can you use the commands git log and git diff to view the history of files?

Git log shows the entire history of commits. Git diff helps compare two commits with each other.

How might using version control make you more confident to make changes that could break something?


we can alwys create different versions, thus preserving changes.

Now that you have your workspace set up, what do you want to try using Git for?

To work on big coding projects.